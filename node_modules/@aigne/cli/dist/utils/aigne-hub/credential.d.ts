import type { CreateConnectOptions, FetchResult, LoadCredentialOptions } from "./type.js";
export declare const fetchConfigs: ({ connectUrl, sessionId, fetchInterval, fetchTimeout, }: {
    connectUrl: string;
    sessionId: string;
    fetchInterval: number;
    fetchTimeout: number;
}) => Promise<any>;
export declare function createConnect({ connectUrl, openPage, fetchInterval, retry, source, connectAction, wrapSpinner, closeOnSuccess, intervalFetchConfig, appName, appLogo, }: CreateConnectOptions): Promise<FetchResult>;
export declare function connectToAIGNEHub(url: string): Promise<{
    apiKey: string;
    url: string;
} | {
    apiKey: undefined;
    url: undefined;
}>;
export declare const checkConnectionStatus: (host: string) => Promise<{
    apiKey: any;
    url: any;
}>;
export declare function loadAIGNEHubCredential(options?: LoadCredentialOptions): Promise<{
    apiKey?: string;
    url?: string;
} | undefined>;
