import type { Server } from "node:http";
import express, { type NextFunction, type Request, type Response } from "express";
import { z } from "zod";
declare const startServerOptionsSchema: z.ZodObject<{
    port: z.ZodNumber;
    dbUrl: z.ZodString;
    traceTreeMiddleware: z.ZodOptional<z.ZodArray<z.ZodType<(req: Request, res: Response, next: NextFunction) => void, z.ZodTypeDef, (req: Request, res: Response, next: NextFunction) => void>, "many">>;
}, "strip", z.ZodTypeAny, {
    port: number;
    dbUrl: string;
    traceTreeMiddleware?: ((req: Request, res: Response, next: NextFunction) => void)[] | undefined;
}, {
    port: number;
    dbUrl: string;
    traceTreeMiddleware?: ((req: Request, res: Response, next: NextFunction) => void)[] | undefined;
}>;
export type StartServerOptions = z.infer<typeof startServerOptionsSchema>;
export declare function startServer(options: StartServerOptions): Promise<{
    app: express.Express;
    server: Server;
}>;
export {};
