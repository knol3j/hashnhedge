"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@aigne/core");
const zod_1 = require("zod");
const prompts_js_1 = require("../prompts.js");
const mapper = core_1.AIAgent.from({
    subscribeTopic: [core_1.UserInputTopic, "mapping_request"],
    publishTopic: "review_request",
    inputSchema: zod_1.z.object({
        sourceData: zod_1.z.string(),
        sourceSchema: zod_1.z.string().optional(),
        responseSchema: zod_1.z.string(),
        instruction: zod_1.z.string().optional(),
        responseData: zod_1.z.string().optional(),
        feedback: zod_1.z.string().optional(),
    }),
    outputSchema: zod_1.z.object({
        jsonata: zod_1.z.string().describe("JSONata expression"),
        confidence: zod_1.z.number().describe(`Confidence score for the JSONata expression between 0 and 100.
      Give a low confidence score if there are missing fields in the source data.
      Give a low confidence score if there are multiple options for a field and it is unclear which one to choose.`),
        confidenceReasoning: zod_1.z.string().describe("Reasoning for the confidence score"),
    }),
    includeInputInOutput: true,
    instructions: core_1.PromptBuilder.from({
        messages: [
            {
                role: "assistant",
                content: {
                    type: "text",
                    text: prompts_js_1.PROMPT_MAPPING,
                },
            },
            {
                role: "user",
                content: {
                    type: "text",
                    text: `Given a source data and structure, create a jsonata expression in JSON FORMAT.
                Important: The output should be a jsonata expression creating an object that matches the following schema:
                {{responseSchema}}

                Pay special attention to the requirements in field descriptions

                The instruction from the user is: {{instruction}}

                ------

                Source Data Structure:
                {{sourceSchema}}

                Source data Sample:
                {{sourceData}}

                ------

                Previous feedback:
                {{feedback}}`,
                },
            },
        ],
    }),
});
exports.default = mapper;
