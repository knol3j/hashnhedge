import { ImageModel, type ImageModelInput, type ImageModelOptions, type ImageModelOutput } from "@aigne/core";
export interface IdeogramImageModelInput extends ImageModelInput {
    seed?: number;
    resolution?: string;
    aspectRatio?: string;
    renderingSpeed?: string;
    magicPrompt?: string;
    negativePrompt?: string;
    numImages?: number;
    colorPalette?: any;
    styleCodes?: string[];
    styleType?: string;
}
export interface IdeogramImageModelOutput extends ImageModelOutput {
}
export interface IdeogramImageModelOptions extends ImageModelOptions<IdeogramImageModelInput, IdeogramImageModelOutput> {
    apiKey?: string;
    baseURL?: string;
    model?: string;
    modelOptions?: Omit<Partial<IdeogramImageModelInput>, "model">;
}
export declare class IdeogramImageModel extends ImageModel<IdeogramImageModelInput, IdeogramImageModelOutput> {
    options?: IdeogramImageModelOptions | undefined;
    constructor(options?: IdeogramImageModelOptions | undefined);
    protected apiKeyEnvName: string;
    get credential(): {
        url: string;
        apiKey: string | undefined;
    };
    get modelOptions(): Omit<Partial<IdeogramImageModelInput>, "model"> | undefined;
    /**
     * Process the input and generate a response
     * @param input The input to process
     * @returns The generated response
     */
    process(input: IdeogramImageModelInput): Promise<ImageModelOutput>;
}
