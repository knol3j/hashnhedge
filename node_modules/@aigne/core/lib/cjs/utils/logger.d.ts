export declare enum LogLevel {
    SILENT = "silent",
    ERROR = "error",
    WARN = "warn",
    INFO = "info",
    DEBUG = "debug"
}
export declare function getLevelFromEnv(ns: string): LogLevel | undefined;
export declare class Logger {
    options: {
        level: LogLevel;
        ns: string;
    };
    constructor(options: {
        level: LogLevel;
        ns: string;
    });
    level: LogLevel;
    private debugLogger;
    private infoLogger;
    private warnLogger;
    private errorLogger;
    logMessage: {
        (...data: any[]): void;
        (...data: any[]): void;
        (message?: any, ...optionalParams: any[]): void;
    };
    logError: {
        (...data: any[]): void;
        (...data: any[]): void;
        (message?: any, ...optionalParams: any[]): void;
    };
    debug(message: string, ...args: unknown[]): void;
    info(message: string, ...args: unknown[]): void;
    warn(message: string, ...args: unknown[]): void;
    error(message: string, ...args: unknown[]): void;
    enabled(level: LogLevel): boolean;
}
export declare const logger: Logger;
