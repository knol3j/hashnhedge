"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.safeParseJSON = safeParseJSON;
exports.safeStringifyJSON = safeStringifyJSON;
const jaison_1 = __importDefault(require("jaison"));
/**
 * Safely parses JSON text using jaison library which handles malformed JSON better than JSON.parse
 *
 * @param text - The text to parse as JSON
 * @returns Parsed JSON object or null if parsing fails
 *
 * @example
 * ```typescript
 * const result = safeParseJSON('{"key": "value"}');
 * console.log(result); // { key: "value" }
 *
 * const malformed = safeParseJSON('{"key": "value"'); // Missing closing brace
 * console.log(malformed); // null
 * ```
 */
function safeParseJSON(text) {
    if (!text)
        return null;
    try {
        return (0, jaison_1.default)(text);
    }
    catch {
        return null;
    }
}
/**
 * Safely stringifies a value to JSON, handling errors gracefully
 *
 * @param value - The value to stringify
 * @param space - Optional spacing for pretty printing
 * @returns JSON string or null if stringification fails
 */
function safeStringifyJSON(value, space) {
    try {
        return JSON.stringify(value, null, space);
    }
    catch {
        return null;
    }
}
