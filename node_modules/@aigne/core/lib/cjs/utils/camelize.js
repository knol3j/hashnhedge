"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.camelize = camelize;
exports.snakelize = snakelize;
function camelize(obj, shallow) {
    return typeof obj === "string" ? camelCase(obj) : walk(obj, shallow, camelCase);
}
function snakelize(obj, shallow) {
    return typeof obj === "string" ? snakeCase(obj) : walk(obj, shallow, snakeCase);
}
function camelCase(key) {
    key = key.replace(/[_.-](\w|$)/g, (_, char) => char.toUpperCase());
    key = key.charAt(0).toLowerCase() + key.slice(1);
    return key;
}
function snakeCase(key) {
    return key.replace(/([a-z])([A-Z])/g, "$1_$2").toLowerCase();
}
function walk(obj, shallow = false, transform) {
    if (!obj || typeof obj !== "object")
        return obj;
    if (obj instanceof Date || obj instanceof RegExp)
        return obj;
    if (Array.isArray(obj))
        return obj.map((v) => {
            if (!shallow) {
                return walk(v, shallow, transform);
            }
            if (typeof v === "object")
                return walk(v, shallow, transform);
            return v;
        });
    return Object.keys(obj).reduce((res, key) => {
        const newKey = transform(key);
        res[newKey] = shallow ? obj[key] : walk(obj[key], shallow, transform);
        return res;
    }, {});
}
