import { type AgentProcessResult, ChatModel, type ChatModelInput, type ChatModelOutput, ImageModel, type ImageModelInput, type ImageModelOutput } from "@aigne/core";
import type { BaseClientInvokeOptions } from "@aigne/transport/http-client/base-client.js";
import type { AIGNEHubChatModelOptions, AIGNEHubImageModelOptions } from "./utils/type.js";
export * from "./utils/blocklet.js";
export * from "./utils/constants.js";
export * from "./utils/model.js";
export declare class AIGNEHubChatModel extends ChatModel {
    options: AIGNEHubChatModelOptions;
    static load(options: AIGNEHubChatModelOptions): Promise<AIGNEHubChatModel>;
    constructor(options: AIGNEHubChatModelOptions);
    protected client: ChatModel;
    get credential(): import("@aigne/core/utils/type-utils.js").PromiseOrValue<{
        url?: string;
        apiKey?: string;
        model?: string;
    }>;
    process(input: ChatModelInput, options: BaseClientInvokeOptions): Promise<AgentProcessResult<ChatModelOutput>>;
}
export declare class AIGNEHubImageModel extends ImageModel {
    options: AIGNEHubImageModelOptions;
    static load(options: AIGNEHubImageModelOptions): Promise<AIGNEHubImageModel>;
    constructor(options: AIGNEHubImageModelOptions);
    protected client: ImageModel;
    get credential(): import("@aigne/core/utils/type-utils.js").PromiseOrValue<{
        url?: string;
        apiKey?: string;
        model?: string;
    }>;
    process(input: ImageModelInput, options: BaseClientInvokeOptions): Promise<AgentProcessResult<ImageModelOutput>>;
}
