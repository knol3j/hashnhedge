import { createClient } from "@libsql/client";
import { drizzle } from "drizzle-orm/libsql";
import { withRetry } from "./retry.js";
export async function initDatabase({ url = ":memory:", wal = false, } = {}) {
    let db;
    if (wal) {
        const client = createClient({ url });
        await client.execute(`\
PRAGMA journal_mode = WAL;
PRAGMA synchronous = normal;
PRAGMA wal_autocheckpoint = 5000;
PRAGMA busy_timeout = 5000;
`);
        db = drizzle(client);
    }
    else {
        db = drizzle(url);
    }
    if ("session" in db && db.session && typeof db.session === "object") {
        db.session = withRetry(db.session, [
            "all",
            "get",
            "run",
            "values",
            "count",
        ]);
    }
    return db;
}
