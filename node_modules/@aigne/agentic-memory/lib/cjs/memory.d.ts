import { type AgentInvokeOptions, type AgentOptions, AIAgent, MemoryAgent, type MemoryAgentOptions, MemoryRecorder, type MemoryRecorderInput, type MemoryRecorderOutput, type Message, type PromptBuilder } from "@aigne/core";
import { DefaultMemoryRetriever, type DefaultMemoryRetrieverOptions, type DefaultMemoryStorageOptions, MemoryStorage } from "@aigne/default-memory";
export interface AgenticMemoryOptions extends Partial<MemoryAgentOptions>, Omit<AgenticMemoryRecorderOptions, "storage" | keyof AgentOptions>, Omit<AgenticMemoryRetrieverOptions, "storage" | keyof AgentOptions> {
    storage?: MemoryStorage | DefaultMemoryStorageOptions;
}
export declare class AgenticMemory extends MemoryAgent {
    constructor(options?: AgenticMemoryOptions);
    storage: MemoryStorage;
}
export interface AgenticMemoryRetrieverOptions extends DefaultMemoryRetrieverOptions {
}
export declare class AgenticMemoryRetriever extends DefaultMemoryRetriever {
}
export interface AgenticMemoryRecorderOptions extends AgentOptions<MemoryRecorderInput, MemoryRecorderOutput> {
    storage: MemoryStorage;
    instructions?: string | PromptBuilder;
    agent?: AIAgent<AgenticMemoryExtractorInput, AgenticMemoryExtractorOutput>;
    inputKey?: string | string[];
    outputKey?: string | string[];
}
export interface AgenticMemoryExtractorInput extends Message {
    content: unknown;
}
export interface AgenticMemoryExtractorOutput extends Message {
    newMemories: {
        content: string;
    }[];
}
export declare class AgenticMemoryRecorder extends MemoryRecorder {
    constructor(options: AgenticMemoryRecorderOptions);
    private storage;
    private inputKey?;
    private outputKey?;
    private agent;
    process(input: MemoryRecorderInput, options: AgentInvokeOptions): Promise<MemoryRecorderOutput>;
}
