import * as AES from 'crypto-js/aes';
import encLatin1 from 'crypto-js/enc-latin1';
import encUtf8 from 'crypto-js/enc-utf8';
import encUtf16 from 'crypto-js/enc-utf16';
import encBase64 from 'crypto-js/enc-base64';
import encHex from 'crypto-js/enc-hex';
import Crypter from '../protocols/crypter';
const encoders = {
    latin1: encLatin1,
    utf8: encUtf8,
    hex: encHex,
    utf16: encUtf16,
    base64: encBase64,
};
// AES-CBC-256
class AesCrypter extends Crypter {
    encrypt(message, secret) {
        const text = typeof message === 'string' ? message : JSON.stringify(message);
        return AES.encrypt(text, secret).toString();
    }
    decrypt(cipher, secret, outputEncoding = 'utf8') {
        return AES.decrypt(cipher, secret).toString(encoders[outputEncoding]);
    }
}
export default new AesCrypter();
export { AesCrypter };
