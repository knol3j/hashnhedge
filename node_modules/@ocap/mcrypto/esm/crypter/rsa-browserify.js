// https://stackoverflow.com/questions/70056340/how-can-i-generate-an-rsa-pair-that-works-both-in-node-js-and-browser
// https://stackoverflow.com/questions/62948516/using-native-javascript-subtlecrypto-to-encrypt-using-rsa
import { fromBase58, toBase58 } from '@ocap/util';
const crypto = window.crypto.subtle;
// @ts-ignore
const ab2str = (buffer) => String.fromCharCode.apply(null, new Uint8Array(buffer));
const RSA_ALGORITHM = 'RSA-OAEP';
// RSA-OAEP
class RSABrowserCrypter {
    genKeyPair(length = 2048) {
        return crypto.generateKey({
            name: RSA_ALGORITHM,
            modulusLength: length,
            publicExponent: new Uint8Array([1, 0, 1]),
            hash: 'SHA-256',
        }, true, ['encrypt', 'decrypt']);
    }
    async formatPublicKey(key) {
        const exported = await crypto.exportKey('spki', key);
        const base64 = window.btoa(ab2str(exported));
        return `-----BEGIN PUBLIC KEY-----\n${base64}\n-----END PUBLIC KEY-----`;
    }
    async encrypt(message, key) {
        const encrypted = await crypto.encrypt({ name: RSA_ALGORITHM }, key, new TextEncoder().encode(message));
        return toBase58(new Uint8Array(encrypted));
    }
    async decrypt(message, key) {
        const decrypted = await crypto.decrypt({ name: RSA_ALGORITHM }, key, fromBase58(message));
        return Buffer.from(new Uint8Array(decrypted)).toString('utf8');
    }
}
export default new RSABrowserCrypter();
export { RSABrowserCrypter };
