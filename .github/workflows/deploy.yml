name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code WITHOUT submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false  # CRITICAL: Disable submodule processing
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.148.2'
          extended: true

      - name: Verify and Install Newsroom theme
        run: |
          echo "=== Theme Installation Verification ==="
          if [ -d "site/themes/newsroom/layouts" ]; then
            echo "✓ Newsroom theme found"
            echo "  Files: $(find site/themes/newsroom -type f | wc -l)"
            echo "  Directories: $(find site/themes/newsroom -type d | wc -l)"
          else
            echo "✗ Theme missing - Installing from repository..."
            git clone https://github.com/onweru/newsroom.git site/themes/newsroom
            rm -rf site/themes/newsroom/.git
            echo "✓ Theme installed successfully"
          fi

      - name: Build with Hugo
        run: |
          echo "=== Starting Hugo Build ==="
          cd site
          echo "Current directory: $(pwd)"
          echo "Config file check:"
          if [ -f "config.toml" ]; then
            echo "✓ config.toml found"
          elif [ -f "hugo.toml" ]; then            echo "✓ hugo.toml found"
          else
            echo "⚠ No config file found - build may fail"
          fi
          echo ""
          echo "Building site..."
          # CORRECTED: Use proper Hugo flags without --verbose
          hugo --gc --minify --destination ../public
          echo ""
          echo "=== Build Complete ==="
          echo "Generated files: $(find ../public -type f | wc -l)"
          echo "Total size: $(du -sh ../public | cut -f1)"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4